/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/script.js":
/*!**********************!*\
  !*** ./js/script.js ***!
  \**********************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return r; }; var t, r = {}, e = Object.prototype, n = e.hasOwnProperty, o = \"function\" == typeof Symbol ? Symbol : {}, i = o.iterator || \"@@iterator\", a = o.asyncIterator || \"@@asyncIterator\", u = o.toStringTag || \"@@toStringTag\"; function c(t, r, e, n) { return Object.defineProperty(t, r, { value: e, enumerable: !n, configurable: !n, writable: !n }); } try { c({}, \"\"); } catch (t) { c = function c(t, r, e) { return t[r] = e; }; } function h(r, e, n, o) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype); return c(a, \"_invoke\", function (r, e, n) { var o = 1; return function (i, a) { if (3 === o) throw Error(\"Generator is already running\"); if (4 === o) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var u = n.delegate; if (u) { var c = d(u, n); if (c) { if (c === f) continue; return c; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (1 === o) throw o = 4, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = 3; var h = s(r, e, n); if (\"normal\" === h.type) { if (o = n.done ? 4 : 2, h.arg === f) continue; return { value: h.arg, done: n.done }; } \"throw\" === h.type && (o = 4, n.method = \"throw\", n.arg = h.arg); } }; }(r, n, new Context(o || [])), !0), a; } function s(t, r, e) { try { return { type: \"normal\", arg: t.call(r, e) }; } catch (t) { return { type: \"throw\", arg: t }; } } r.wrap = h; var f = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var l = {}; c(l, i, function () { return this; }); var p = Object.getPrototypeOf, y = p && p(p(x([]))); y && y !== e && n.call(y, i) && (l = y); var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l); function g(t) { [\"next\", \"throw\", \"return\"].forEach(function (r) { c(t, r, function (t) { return this._invoke(r, t); }); }); } function AsyncIterator(t, r) { function e(o, i, a, u) { var c = s(t[o], t, i); if (\"throw\" !== c.type) { var h = c.arg, f = h.value; return f && \"object\" == _typeof(f) && n.call(f, \"__await\") ? r.resolve(f.__await).then(function (t) { e(\"next\", t, a, u); }, function (t) { e(\"throw\", t, a, u); }) : r.resolve(f).then(function (t) { h.value = t, a(h); }, function (t) { return e(\"throw\", t, a, u); }); } u(c.arg); } var o; c(this, \"_invoke\", function (t, n) { function i() { return new r(function (r, o) { e(t, n, r, o); }); } return o = o ? o.then(i, i) : i(); }, !0); } function d(r, e) { var n = e.method, o = r.i[n]; if (o === t) return e.delegate = null, \"throw\" === n && r.i[\"return\"] && (e.method = \"return\", e.arg = t, d(r, e), \"throw\" === e.method) || \"return\" !== n && (e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), f; var i = s(o, r.i, e.arg); if (\"throw\" === i.type) return e.method = \"throw\", e.arg = i.arg, e.delegate = null, f; var a = i.arg; return a ? a.done ? (e[r.r] = a.value, e.next = r.n, \"return\" !== e.method && (e.method = \"next\", e.arg = t), e.delegate = null, f) : a : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, f); } function w(t) { this.tryEntries.push(t); } function m(r) { var e = r[4] || {}; e.type = \"normal\", e.arg = t, r[4] = e; } function Context(t) { this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0); } function x(r) { if (null != r) { var e = r[i]; if (e) return e.call(r); if (\"function\" == typeof r.next) return r; if (!isNaN(r.length)) { var o = -1, a = function e() { for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e; return e.value = t, e.done = !0, e; }; return a.next = a; } } throw new TypeError(_typeof(r) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, \"constructor\", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), r.isGeneratorFunction = function (t) { var r = \"function\" == typeof t && t.constructor; return !!r && (r === GeneratorFunction || \"GeneratorFunction\" === (r.displayName || r.name)); }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, \"GeneratorFunction\")), t.prototype = Object.create(v), t; }, r.awrap = function (t) { return { __await: t }; }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () { return this; }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(h(t, e, n, o), i); return r.isGeneratorFunction(e) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, g(v), c(v, u, \"Generator\"), c(v, i, function () { return this; }), c(v, \"toString\", function () { return \"[object Generator]\"; }), r.keys = function (t) { var r = Object(t), e = []; for (var n in r) e.unshift(n); return function t() { for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t; return t.done = !0, t; }; }, r.values = x, Context.prototype = { constructor: Context, reset: function reset(r) { if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) \"t\" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0][4]; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(r) { if (this.done) throw r; var e = this; function n(t) { a.type = \"throw\", a.arg = r, e.next = t; } for (var o = e.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i[4], u = this.prev, c = i[1], h = i[2]; if (-1 === i[0]) return n(\"end\"), !1; if (!c && !h) throw Error(\"try statement without catch or finally\"); if (null != i[0] && i[0] <= u) { if (u < c) return this.method = \"next\", this.arg = t, n(c), !0; if (u < h) return n(h), !1; } } }, abrupt: function abrupt(t, r) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) { var o = n; break; } } o && (\"break\" === t || \"continue\" === t) && o[0] <= r && r <= o[2] && (o = null); var i = o ? o[4] : {}; return i.type = t, i.arg = r, o ? (this.method = \"next\", this.next = o[2], f) : this.complete(i); }, complete: function complete(t, r) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && r && (this.next = r), f; }, finish: function finish(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[2] === t) return this.complete(e[4], e[3]), m(e), f; } }, \"catch\": function _catch(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[0] === t) { var n = e[4]; if (\"throw\" === n.type) { var o = n.arg; m(e); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(r, e, n) { return this.delegate = { i: x(r), r: e, n: n }, \"next\" === this.method && (this.arg = t), f; } }, r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// --- Configuration for the Central Router URL ---\n// REPLACE THIS WITH YOUR CLOUDFLARE TUNNEL HOSTNAME FOR THE CENTRAL ROUTER\nvar centralRouterURL = \"https://my-devices.versawear.org\";\n\n// --- Helper Function to Display Status Messages ---\nfunction displayStatus(elementId, message, isSuccess) {\n  var statusEl = document.getElementById(elementId);\n  statusEl.textContent = message;\n  statusEl.className = 'status-msg ' + (isSuccess ? 'success' : 'error');\n  setTimeout(function () {\n    statusEl.style.display = 'none'; // Hide after 5 seconds\n  }, 5000);\n}\n\n// --- Register New ESP32 Device ---\nfunction registerNewDevice() {\n  return _registerNewDevice.apply(this, arguments);\n} // --- Load All Registered ESP32 Devices ---\nfunction _registerNewDevice() {\n  _registerNewDevice = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var deviceIdInput, localIpInput, deviceId, localIp, response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          deviceIdInput = document.getElementById('newDeviceId');\n          localIpInput = document.getElementById('newLocalIp');\n          deviceId = deviceIdInput.value.trim();\n          localIp = localIpInput.value.trim();\n          if (!(!deviceId || !localIp)) {\n            _context.next = 7;\n            break;\n          }\n          displayStatus('registerStatus', \"Please enter both Device ID and Local IP.\", false);\n          return _context.abrupt(\"return\");\n        case 7:\n          _context.prev = 7;\n          _context.next = 10;\n          return fetch(\"\".concat(centralRouterURL, \"/register_device\"), {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json' // Flask expects JSON for this route\n            },\n            body: JSON.stringify({\n              device_id: deviceId,\n              local_ip: localIp\n            })\n          });\n        case 10:\n          response = _context.sent;\n          _context.next = 13;\n          return response.json();\n        case 13:\n          data = _context.sent;\n          if (response.ok) {\n            displayStatus('registerStatus', \"Success: \".concat(data.message), true);\n            deviceIdInput.value = ''; // Clear inputs\n            localIpInput.value = '';\n            loadDevices(); // Reload device list after registration\n          } else {\n            displayStatus('registerStatus', \"Error: \".concat(data.error || 'Unknown error'), false);\n          }\n          _context.next = 21;\n          break;\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](7);\n          displayStatus('registerStatus', \"Network Error: Could not connect to router. \".concat(_context.t0.message), false);\n          console.error('Registration fetch failed:', _context.t0);\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[7, 17]]);\n  }));\n  return _registerNewDevice.apply(this, arguments);\n}\nfunction loadDevices() {\n  return _loadDevices.apply(this, arguments);\n} // --- Send Text to Selected ESP32 Device ---\nfunction _loadDevices() {\n  _loadDevices = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var deviceListEl, selectDeviceIdEl, response, devices, deviceId, li, option;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          deviceListEl = document.getElementById('deviceList');\n          selectDeviceIdEl = document.getElementById('selectDeviceId');\n          deviceListEl.innerHTML = ''; // Clear existing list\n          selectDeviceIdEl.innerHTML = '<option value=\"\">Select a device...</option>'; // Reset dropdown\n          _context2.prev = 4;\n          _context2.next = 7;\n          return fetch(\"\".concat(centralRouterURL, \"/devices\"));\n        case 7:\n          response = _context2.sent;\n          _context2.next = 10;\n          return response.json();\n        case 10:\n          devices = _context2.sent;\n          if (!(Object.keys(devices).length === 0)) {\n            _context2.next = 15;\n            break;\n          }\n          deviceListEl.innerHTML = '<li class=\"list-group-item text-muted\">No devices registered yet.</li>';\n          selectDeviceIdEl.innerHTML = '<option value=\"\">No devices available</option>';\n          return _context2.abrupt(\"return\");\n        case 15:\n          for (deviceId in devices) {\n            li = document.createElement('li');\n            li.className = 'list-group-item';\n            li.textContent = \"\".concat(deviceId, \" (IP: \").concat(devices[deviceId], \")\");\n            deviceListEl.appendChild(li);\n            option = document.createElement('option');\n            option.value = deviceId;\n            option.textContent = deviceId;\n            selectDeviceIdEl.appendChild(option);\n          }\n          _context2.next = 23;\n          break;\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](4);\n          deviceListEl.innerHTML = '<li class=\"list-group-item text-danger\">Failed to load devices. Check router.</li>';\n          selectDeviceIdEl.innerHTML = '<option value=\"\">Error loading devices</option>';\n          console.error('Load devices fetch failed:', _context2.t0);\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[4, 18]]);\n  }));\n  return _loadDevices.apply(this, arguments);\n}\nfunction transmitter() {\n  return _transmitter.apply(this, arguments);\n} // cloudflare cmd: cloudflared tunnel run esp32-controller-tunnel\nfunction _transmitter() {\n  _transmitter = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var selectedDeviceId, para_content, targetURL, dataToSend, response, result;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          selectedDeviceId = document.getElementById('selectDeviceId').value;\n          if (selectedDeviceId) {\n            _context3.next = 4;\n            break;\n          }\n          displayStatus('sendTextStatus', \"Please select a device to send text to.\", false);\n          return _context3.abrupt(\"return\");\n        case 4:\n          // --- CHANGE THIS LINE TO GET PLAIN TEXT ---\n          para_content = quill.getText().trim(); // .getText() gets the plain text content.\n          // .trim() removes any leading/trailing whitespace, including a potential newline Quill might add.\n          if (para_content) {\n            _context3.next = 8;\n            break;\n          }\n          // Changed condition to check for empty string after trim\n          displayStatus('sendTextStatus', \"Please enter some text to send.\", false);\n          return _context3.abrupt(\"return\");\n        case 8:\n          console.log(\"Sending to device: \".concat(selectedDeviceId));\n          console.log(\"Text content (Plain Text):\", para_content); // Updated console log\n          targetURL = \"\".concat(centralRouterURL, \"/\").concat(selectedDeviceId, \"/submit_text\");\n          dataToSend = \"message=\".concat(encodeURIComponent(para_content));\n          _context3.prev = 12;\n          _context3.next = 15;\n          return fetch(targetURL, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: dataToSend\n          });\n        case 15:\n          response = _context3.sent;\n          _context3.next = 18;\n          return response.text();\n        case 18:\n          result = _context3.sent;\n          if (response.ok) {\n            displayStatus('sendTextStatus', \"Success: \".concat(result), true);\n          } else {\n            displayStatus('sendTextStatus', \"Error: \".concat(result), false);\n            console.error('ESP32 Router Response Error:', result);\n          }\n          _context3.next = 26;\n          break;\n        case 22:\n          _context3.prev = 22;\n          _context3.t0 = _context3[\"catch\"](12);\n          displayStatus('sendTextStatus', \"Network Error: Could not reach router. \".concat(_context3.t0.message), false);\n          console.error('Fetch failed:', _context3.t0);\n        case 26:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[12, 22]]);\n  }));\n  return _transmitter.apply(this, arguments);\n}\n\n//# sourceURL=webpack://web/./js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/script.js"]();
/******/ 	
/******/ })()
;